apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: netdns
rules:
- apiGroups: ["networking.k8s.io"] # "" indicates the core API group
  resources: ["networkpolicies"]
  verbs: ["get", "watch", "list", "update", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: netdns-pods
  namespace: default
subjects:
# You can specify more than one "subject"
subjects:
- kind: Group
  name: system:authenticated
  apiGroup: rbac.authorization.k8s.io
- kind: Group
  name: system:unauthenticated
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role #this must be Role or ClusterRole
  name: netdns #pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netdns
spec:
  replicas: 0
  selector:
    matchLabels:
      app: netdns
  template:
    metadata:
      labels:
        app: netdns
    spec:
      containers:
      - name: proxy
        image: nginx
        volumeMounts:
        - mountPath: /configmap
          readOnly: true
          name: settings
      restartPolicy: Always
      volumes:
      - name: settings
        configMap:
          name: netdns-settings
          items:
            - key: settings.yml
              path: settings.yml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: netdns-settings
data:
  settings.yml: |
    podSelector:
      matchLabels:
        role: mysql-client
    domain:
      - "aws.com"
      - "chrisfreeman.uk"
